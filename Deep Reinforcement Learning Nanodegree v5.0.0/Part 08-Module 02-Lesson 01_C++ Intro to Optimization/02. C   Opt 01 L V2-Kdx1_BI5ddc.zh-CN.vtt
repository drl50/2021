WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.955
嗨 我是 Anthony 优达学城的机器人产品负责人

00:00:03.955 --> 00:00:06.486
你已经在 C++ 中学习了很多语法

00:00:06.485 --> 00:00:08.939
包括如何编写函数和类

00:00:08.939 --> 00:00:11.879
现在你应该自信满满 觉得自己可以用 Python 编写任何代码

00:00:11.880 --> 00:00:14.025
同时 也可以用 C++ 编写代码了

00:00:14.025 --> 00:00:19.289
不过 我们先不着急开始 首先谈谈为什么你要学习 C++

00:00:19.289 --> 00:00:24.210
根本原因是 某些 C++ 程序运行速度更快

00:00:24.210 --> 00:00:25.740
无人驾驶车需要快速做决定

00:00:25.739 --> 00:00:29.899
才能在动态环境中成功驾驶

00:00:29.899 --> 00:00:35.129
从你的程序中的这个毫秒里节省一部分看起来并不多

00:00:35.130 --> 00:00:38.500
这段时间 甚至不足以执行一条指令

00:00:38.500 --> 00:00:41.189
不过无人驾驶车能够在非常短的时间内

00:00:41.189 --> 00:00:43.964
执行数十亿或者数万亿条指令

00:00:43.965 --> 00:00:46.900
所以这些时间会迅速累积

00:00:46.899 --> 00:00:50.250
如果你想让汽车能在你期望的时候立即执行指令

00:00:50.250 --> 00:00:54.269
而不是等待几秒 代码效率非常重要

00:00:54.270 --> 00:00:57.950
但是 如何让你的程序在使用 C++ 时运行得更快呢？

00:00:57.950 --> 00:01:00.190
一旦你有一个可正常运行的程序

00:01:00.189 --> 00:01:03.254
你必须经历一个叫做代码优化的过程

00:01:03.255 --> 00:01:07.200
代码优化通常可以让程序使用更少的内存

00:01:07.200 --> 00:01:10.230
提高电源效率 或者执行速度更快

00:01:10.230 --> 00:01:15.255
在本课中 我们主要关注如何让 C++ 代码更快地执行

00:01:15.254 --> 00:01:17.515
对于你写的每一行代码

00:01:17.515 --> 00:01:22.253
计算机将执行相应的指令 如写入或读取内存

00:01:22.253 --> 00:01:24.364
或者运行数学计算

00:01:24.364 --> 00:01:27.524
甚至像是将一个整数赋值给一个变量这样简单的指令

00:01:27.525 --> 00:01:32.010
也要求计算机执行一组指令并写入内存

00:01:32.010 --> 00:01:36.130
通常 有多种方式可以编写程序并达到相同的结果

00:01:36.129 --> 00:01:40.679
如果你找到了一个解决方案 可以让计算机执行更少的指令

00:01:40.680 --> 00:01:44.250
那么很显然 你的代码将运行得更快

00:01:44.250 --> 00:01:46.555
我们把这一课分成两部分

00:01:46.555 --> 00:01:49.680
首先你会了解 当你编译和运行 C++ 程序时

00:01:49.680 --> 00:01:53.655
计算机内部发生了哪些事情

00:01:53.655 --> 00:01:58.564
这会让你大致了解到程序变慢的原因

00:01:58.564 --> 00:02:03.454
然后 你将根据学到的知识来优化 C++ 代码

00:02:03.454 --> 00:02:05.129
当你完成本部分学习时

00:02:05.129 --> 00:02:11.000
你会掌握如何以计算机的方式思考问题

